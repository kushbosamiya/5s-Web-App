{"ast":null,"code":"var _jsxFileName = \"E:\\\\edrive bakup\\\\edrive\\\\5s Center\\\\5s-prod\\\\src\\\\Component\\\\Section\\\\Header.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Header\"\n  }, void 0, false);\n};\n\n_c = Header;\nexport default Header;\n\nconst NavBar = props => {\n  _s();\n\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return /*#__PURE__*/_jsxDEV(NavBarContainer, { ...props,\n    children: [/*#__PURE__*/_jsxDEV(Logo, {\n      w: \"100px\",\n      color: [\"white\", \"white\", \"primary.500\", \"primary.500\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuToggle, {\n      toggle: toggle,\n      isOpen: isOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuLinks, {\n      isOpen: isOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this);\n};\n\n_s(NavBar, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n_c2 = NavBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"NavBar\");","map":{"version":3,"names":["React","Header","NavBar","props","isOpen","setIsOpen","useState","toggle"],"sources":["E:/edrive bakup/edrive/5s Center/5s-prod/src/Component/Section/Header.jsx"],"sourcesContent":["import React ,{\r\n     \r\n} from 'react'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>Header</>\r\n  )\r\n}\r\n\r\nexport default Header\r\n\r\n\r\nconst NavBar = (props) => {\r\n    const [isOpen, setIsOpen] = React.useState(false);\r\n  \r\n    const toggle = () => setIsOpen(!isOpen);\r\n  \r\n    return (\r\n      <NavBarContainer {...props}>\r\n        <Logo\r\n          w=\"100px\"\r\n          color={[\"white\", \"white\", \"primary.500\", \"primary.500\"]}\r\n        />\r\n        <MenuToggle toggle={toggle} isOpen={isOpen} />\r\n        <MenuLinks isOpen={isOpen} />\r\n      </NavBarContainer>\r\n    );\r\n  };"],"mappings":";;;AAAA,OAAOA,KAAP,MAEO,OAFP;;;;AAIA,MAAMC,MAAM,GAAG,MAAM;EACnB,oBACE;IAAA;EAAA,iBADF;AAGD,CAJD;;KAAMA,M;AAMN,eAAeA,MAAf;;AAGA,MAAMC,MAAM,GAAIC,KAAD,IAAW;EAAA;;EACtB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,KAAK,CAACM,QAAN,CAAe,KAAf,CAA5B;;EAEA,MAAMC,MAAM,GAAG,MAAMF,SAAS,CAAC,CAACD,MAAF,CAA9B;;EAEA,oBACE,QAAC,eAAD,OAAqBD,KAArB;IAAA,wBACE,QAAC,IAAD;MACE,CAAC,EAAC,OADJ;MAEE,KAAK,EAAE,CAAC,OAAD,EAAU,OAAV,EAAmB,aAAnB,EAAkC,aAAlC;IAFT;MAAA;MAAA;MAAA;IAAA,QADF,eAKE,QAAC,UAAD;MAAY,MAAM,EAAEI,MAApB;MAA4B,MAAM,EAAEH;IAApC;MAAA;MAAA;MAAA;IAAA,QALF,eAME,QAAC,SAAD;MAAW,MAAM,EAAEA;IAAnB;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD,CAfH;;GAAMF,M;;MAAAA,M"},"metadata":{},"sourceType":"module"}